<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.newtouch.mapping.classMapper">
	
	<!-- 
		方式一：嵌套结果：使用嵌套结果映射来处理重复的联合结果的子集
		封装联表查询的数据(去除重复的数据)
		select * from class c, teacher t where c.teacher_id=t.t_id and c.c_id=1
	 -->
	<select id = "getClass" parameterType="int" resultMap="classResultMap">
		select * from class c left join teacher t on c.teacher_id = t.t_id where c.c_id = #{id}
	</select>
	
	<!-- 使用resultMap映射实体类和字段之间的一一对应关系 -->
	<resultMap type="Classes" id="classResultMap">
		<id property="id" column="c_id"/>
		<result property="name" column="c_name"/>
		<association property="teacher" javaType="Teacher">
			<id property="id" column="t_id"/>
			<result property="name" column="t_name"/>
		</association>
	</resultMap>
	
	<!-- 
	方式二：嵌套查询：通过执行另外一个SQL映射语句来返回预期的复杂类型
		SELECT * FROM class WHERE c_id=1;
		SELECT * FROM teacher WHERE t_id=1   //1 是上一个查询得到的teacher_id的值
	 -->
	<select id="getClass2" parameterType="int" resultMap="ClassResultMap2">
		select * from class where c_id=#{id}
	</select>
		
	<!-- 使用resultMap映射实体类和字段之间的一一对应关系 -->
	<resultMap type="Classes" id="ClassResultMap2">
		<id property="id" column="c_id"/>
		<result property="name" column="c_name"/>
		<association property="teacher" column="teacher_id" select="getTeacher"/>
	</resultMap>
	
</mapper>
